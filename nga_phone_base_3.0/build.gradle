apply plugin: 'com.android.application'

static def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMddHHmm')
    return formattedDate
}

def isJenkins() {
    return project.hasProperty('IS_JENKINS') && IS_JENKINS == 'true'
}

buildscript {
    repositories {
        maven {
            url 'http://maven.aliyun.com/nexus/content/groups/public/'
        }
        maven {
            url 'http://oss.sonatype.org/content/repositories/snapshots'
        }
        mavenCentral()
        jcenter()
    }
}

android {
    compileSdkVersion project.compileSdkVersion
    buildToolsVersion project.buildToolsVersion

    packagingOptions {
        exclude 'lib/arm64-v8a/*.so'
        exclude 'lib/x86_64/*.so'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/MANIFEST.MF'
    }

    defaultConfig {
        applicationId "gov.anzong.androidnga"
        minSdkVersion 20
        targetSdkVersion 25
        multiDexEnabled true
        resConfigs "zh", "en"

        versionCode project.appVersionCode
        versionName project.appVersionName
    }

    buildTypes {
        release {
            debuggable false
            jniDebuggable false
            renderscriptDebuggable false
            pseudoLocalesEnabled false
            minifyEnabled false
            zipAlignEnabled true
        }

        debug {
            applicationIdSuffix ".debug"
            debuggable true
            minifyEnabled false
        }
    }

    dexOptions {
        javaMaxHeapSize "1g"
    }

    lintOptions {
        abortOnError false
        disable 'MissingTranslation'
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs']
        }

        instrumentTest.setRoot('tests')

        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }

    //修改生成的apk名字
    android.applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def newName
            def timeNow
            if (isJenkins()) {
                timeNow = JENKINS_TIME
                newName = 'NGA-v' + project.appVersionName + '-' + timeNow + '-' + variant.buildType.name + '.apk'
            } else {
                timeNow = getDate()
                if (variant.buildType.name == 'debug') {
                    newName = 'NGA-v' + project.appVersionName + '-debug.apk'
                } else {
                    newName = 'NGA-v' + project.appVersionName + '-' + timeNow + '-' + variant.buildType.name + '.apk'
                }
            }
            output.outputFile = new File(output.outputFile.parent, newName)
        }
    }
}

dependencies {
    compile fileTree(include: '*.jar', dir: 'libs')
    compile project(':SwipeBackLayoutLibrary')
    compile project(':ActionBar-PullToRefresh')
    compile project(':PinterestLikeAdapterView')
    compile project(':ActionBar-PullToRefresh-Library')
    compile(name: 'floatingactionmenu', ext: 'aar')
    compile 'com.squareup.okhttp3:okhttp:3.8.0'
    compile 'com.alibaba:fastjson:1.1.63.android'
    compile 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    compile 'com.github.bumptech.glide:glide:3.8.0'
    compile "com.android.support:support-v4:" + project.androidSupportVersion
    compile "com.android.support:design:" + project.androidSupportVersion
    compile 'com.squareup.retrofit2:retrofit:2.3.0'
    compile 'io.reactivex.rxjava2:rxjava:2.1.5'
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    compile 'com.squareup.retrofit2:retrofit-converters:2.3.0'
    compile 'com.squareup.retrofit2:converter-scalars:2.3.0'
    compile 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
    compile 'com.github.chrisbanes:photoview:2.1.3'
}